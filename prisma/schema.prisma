// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  username  String   @unique
  email     String?  @unique
  password  String
  domain    Domain[]
}

model Domain {
  id              String     @id @default(uuid())
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  name            String
  description     String?
  tags            String[]
  visibility      Visibility @default(PRIVATE)
  address         String
  port            String
  // iceAddress  String // TODO: Should be delivered by the server, not kept in the database?
  places          Place[]
  protocolVersion String
  owner           User       @relation(fields: [userId], references: [id])
  userId          String

  @@unique([userId, name])
}

model Place {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  name        String
  description String
  tags        String[]
  visibility  Visibility @default(PRIVATE)
  capacity    Int
  thumbnail   String?
  media       Media[]
  maturity    Maturity   @default(UNRATED)
  domain      Domain?    @relation(fields: [domainId], references: [id])
  domainId    String?

  @@unique([domainId, name])
}

enum Visibility {
  PUBLIC
  FRIENDS
  CONNECTIONS
  PRIVATE
}

enum Maturity {
  ADULT
  MATURE
  TEEN
  EVERYONE
  UNRATED
}

model Media {
  id        String  @id @default(uuid())
  url       String
  mediaType String
  Place     Place?  @relation(fields: [placeId], references: [id])
  placeId   String?
}
